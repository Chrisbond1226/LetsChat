{"version":3,"sources":["utils/auth.js","components/Header/index.js","components/Footer/index.js","components/PostList/index.js","utils/mutations.js","utils/queries.js","components/PostForm/index.js","components/FriendsList/index.js","pages/Home.js","pages/Login.js","pages/Signup.js","pages/Profile.js","pages/NotFound.js","components/CommentList/index.js","components/CommentForm/index.js","pages/Post.js","App.js","reportWebVitals.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","className","to","Auth","loggedIn","href","onClick","event","preventDefault","logout","Footer","getFullYear","PostList","posts","title","length","map","post","username","style","fontWeight","_id","postText","createdAt","commentCount","LOGIN_USER","gql","ADD_USER","ADD_POST","ADD_COMMENT","ADD_FRIEND","QUERY_POSTS","QUERY_POST","QUERY_USER","QUERY_ME","QUERY_ME_BASIC","PostForm","useState","setText","characterCount","setCharacterCount","useMutation","update","cache","addPost","data","me","readQuery","query","writeQuery","console","warn","error","handleSubmit","variables","onSubmit","placeholder","value","onChange","target","type","FriendsList","friendCount","friends","friend","Home","useQuery","loading","userData","Login","props","email","password","formState","setFormState","login","handleChange","name","handleFormSubmit","id","Signup","addUser","Profile","userParam","useParams","addFriend","user","getProfile","handleClick","NoMatch","CommentList","comments","comment","commentBody","CommentForm","postId","setBody","addComment","Post","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","path","element","NotFound","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRA6Ce,MA3CE,4CAwCd,OAxCc,uCACf,WACE,OAAOA,YAAOC,KAAKC,WACrB,GAAC,sBAED,WAEE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,EACzC,GAAC,4BAED,SAAeA,GACb,IAEE,OADgBH,YAAOG,GACXE,IAAMC,KAAKC,MAAQ,GAKjC,CAFE,MAAOC,GACP,OAAO,CACT,CACF,GAAC,sBAED,WAEE,OAAOC,aAAaC,QAAQ,WAC9B,GAAC,mBAED,SAAMC,GAEJF,aAAaG,QAAQ,WAAYD,GAEjCE,OAAOC,SAASC,OAAO,IACzB,GAAC,oBAED,WAGEN,aAAaO,WAAW,YAExBH,OAAOC,SAASC,OAAO,IACzB,KAAC,EAxCc,I,OCoCFE,EAjCA,WAMb,OACE,wBAAQC,UAAU,+CAA8C,SAC9D,sBAAKA,UAAU,0EAAyE,UACtF,cAAC,IAAI,CAACC,GAAG,IAAG,SACV,6CAGF,qBAAKD,UAAU,cAAa,SACzBE,EAAKC,WACJ,qCACE,cAAC,IAAI,CAACF,GAAG,WAAU,gBACnB,mBAAGG,KAAK,IAAIC,QAhBT,SAACC,GACdA,EAAMC,iBACNL,EAAKM,QACP,EAawC,uBAK9B,qCACE,cAAC,IAAI,CAACP,GAAG,SAAQ,mBACjB,cAAC,IAAI,CAACA,GAAG,UAAS,6BAOhC,ECtBeQ,EAVA,WACb,OACE,wBAAQT,UAAU,iCAAgC,SAChD,sBAAKA,UAAU,YAAW,kBACjB,IAAIZ,MAAOsB,cAAa,6CAIvC,EC2BeC,EApCE,SAAH,GAA0B,IAApBC,EAAK,EAALA,MAAOC,EAAK,EAALA,MACzB,OAAKD,EAAME,OAKT,gCACE,6BAAKD,IACJD,GACCA,EAAMG,KAAI,SAACC,GAAI,OACb,gCACE,qBAAIhB,UAAU,cAAa,UACzB,cAAC,IAAI,CACHC,GAAE,mBAAce,EAAKC,UACrBC,MAAO,CAAEC,WAAY,KACrBnB,UAAU,aAAY,SAErBgB,EAAKC,WACA,OAEV,8BACE,eAAC,IAAI,CAAChB,GAAE,gBAAWe,EAAKI,KAAM,UAC5B,mBAAGpB,UAAU,YAAW,SAAEgB,EAAKK,WAC/B,oBAAGrB,UAAU,WAAU,uBACVgB,EAAKM,UAAS,IAAE,uBAAS,aACzBN,EAAKO,aAAY,MAAK,IAChCP,EAAKO,aAAe,OAAS,QAAO,6BAhBnCP,EAAKI,IAoBT,OA5BL,6CAgCX,E,sDCnCaI,EAAaC,YAAG,qNAYhBC,EAAWD,YAAG,kQAYdE,EAAWF,YAAG,8OAedG,EAAcH,YAAG,qSAejBI,EAAaJ,YAAG,iNCtDhBK,GDoEgBL,YAAG,8LCpELA,YAAG,iSAkBjBM,EAAaN,YAAG,0QAkBhBO,EAAaP,YAAG,iUAqBhBQ,EAAWR,YAAG,yXA2BdS,EAAiBT,YAAG,2KCLlBU,EAxEE,WACf,MAA4BC,mBAAS,IAAG,mBAAjCf,EAAQ,KAAEgB,EAAO,KACxB,EAA4CD,mBAAS,GAAE,mBAAhDE,EAAc,KAAEC,EAAiB,KAExC,EAA6BC,YAAYb,EAAU,CACjDc,OAAM,SAACC,EAAM,GAAyB,IAAdC,EAAO,EAAfC,KAAQD,QACtB,IACE,IAAQE,EAAOH,EAAMI,UAAU,CAAEC,MAAOd,IAAhCY,GACRH,EAAMM,WAAW,CACfD,MAAOd,EACPW,KAAM,CAAEC,GAAG,2BAAMA,GAAE,IAAEjC,MAAM,GAAD,mBAAMiC,EAAGjC,OAAK,CAAE+B,QAI9C,CAFE,MAAOrD,GACP2D,QAAQC,KAAK,2BACf,CAEA,IAAQtC,EAAU8B,EAAMI,UAAU,CAAEC,MAAOjB,IAAnClB,MACR8B,EAAMM,WAAW,CACfD,MAAOjB,EACPc,KAAM,CAAEhC,MAAM,CAAE+B,GAAO,mBAAK/B,MAEhC,IACA,mBAlBK+B,EAAO,KAAIQ,EAAK,KAALA,MA2BZC,EAAY,iDAAG,WAAO9C,GAAK,2EACR,OAAvBA,EAAMC,iBAAiB,kBAGfoC,EAAQ,CACZU,UAAW,CAAEhC,cACZ,KAAD,EAEFgB,EAAQ,IACRE,EAAkB,GAAG,gDAErBU,QAAQE,MAAM,EAAD,IAAM,yDAEtB,gBAbiB,sCAelB,OACE,8BACE,uBACEnD,UAAU,iEACVsD,SAAUF,EAAa,UAEvB,0BACEpD,UAAU,6BACVuD,YAAY,wBACZC,MAAOnC,EACPoC,SAhCa,SAACnD,GAChBA,EAAMoD,OAAOF,MAAM1C,QA3BD,MA4BpBuB,EAAQ/B,EAAMoD,OAAOF,OACrBjB,EAAkBjC,EAAMoD,OAAOF,MAAM1C,QAEzC,IA4BmB,IACb,uBACA,kDACoBwB,EAAc,IA9DhB,IA+Dfa,GAAS,8DAEZ,uBACA,wBAAQnD,UAAU,gBAAgB2D,KAAK,SAAQ,wBAMvD,EC3DeC,EAjBK,SAAH,GAAkC,IAA5BC,EAAW,EAAXA,YAAaC,EAAO,EAAPA,QAClC,OAAKA,GAAYA,EAAQhD,OAKvB,gCACE,qCAAwB,IAAhB+C,EAAoB,SAAW,aACtCC,EAAQ/C,KAAI,SAACgD,GAAM,OAClB,wBAAQ/D,UAAU,YAAW,SAC3B,cAAC,IAAI,CAACC,GAAE,mBAAc8D,EAAO9C,UAAW,SAAE8C,EAAO9C,YADhB8C,EAAO3C,IAEjC,OATN,kDAaX,E,QC2Be4C,GApCF,WACX,MAA0BC,YAASnC,GAA3BoC,EAAO,EAAPA,QAAStB,EAAI,EAAJA,KACHuB,EAAaF,YAAS/B,GAA5BU,KACFhC,GAAY,OAAJgC,QAAI,IAAJA,OAAI,EAAJA,EAAMhC,QAAS,GAEvBT,EAAWD,EAAKC,WAEtB,OACE,+BACE,sBAAKH,UAAU,iCAAgC,UAC5CG,GACC,qBAAKH,UAAU,cAAa,SAC1B,cAAC,EAAQ,MAGb,qBAAKA,UAAS,sBAAiBG,GAAY,YAAa,SACrD+D,EACC,6CAEA,cAAC,EAAQ,CAACtD,MAAOA,EAAOC,MAAM,uBAGjCV,GAAYgE,EACX,qBAAKnE,UAAU,uBAAsB,SACnC,cAAC,EAAW,CACViB,SAAUkD,EAAStB,GAAG5B,SACtB4C,YAAaM,EAAStB,GAAGgB,YACzBC,QAASK,EAAStB,GAAGiB,YAGvB,SAIZ,E,SC+BeM,GArED,SAACC,GACb,MAAiCjC,mBAAS,CAAEkC,MAAO,GAAIC,SAAU,KAAK,mBAAhEC,EAAS,KAAEC,EAAY,KAC7B,EAA0BjC,YAAYhB,GAAW,mBAA3CkD,EAAK,KAAIvB,EAAK,KAALA,MAETwB,EAAe,SAACrE,GACpB,MAAwBA,EAAMoD,OAAtBkB,EAAI,EAAJA,KAAMpB,EAAK,EAALA,MAEdiB,EAAa,2BACRD,GAAS,mBACXI,EAAOpB,IAEZ,EAEMqB,EAAgB,iDAAG,WAAOvE,GAAK,mFACZ,OAAvBA,EAAMC,iBAAiB,kBAGEmE,EAAM,CAC3BrB,UAAU,eAAMmB,KACf,KAAD,WAFM5B,EAAI,EAAJA,KAIR1C,EAAKwE,MAAM9B,EAAK8B,MAAMzF,OAAO,gDAE7BgE,QAAQE,MAAM,EAAD,IAAM,QAGrBsB,EAAa,CACXH,MAAO,GACPC,SAAU,KACT,yDACJ,gBAjBqB,sCAmBtB,OACE,+BACE,8BACE,sBAAKvE,UAAU,OAAM,UACnB,oBAAIA,UAAU,cAAa,mBAC3B,sBAAKA,UAAU,YAAW,UACxB,uBAAMsD,SAAUuB,EAAiB,UAC/B,uBACE7E,UAAU,aACVuD,YAAY,QACZqB,KAAK,QACLjB,KAAK,QACLmB,GAAG,QACHtB,MAAOgB,EAAUF,MACjBb,SAAUkB,IAEZ,uBACE3E,UAAU,aACVuD,YAAY,WACZqB,KAAK,WACLjB,KAAK,WACLmB,GAAG,WACHtB,MAAOgB,EAAUD,SACjBd,SAAUkB,IAEZ,wBAAQ3E,UAAU,MAAM2D,KAAK,SAAQ,uBAItCR,GAAS,8DAMtB,ECae4B,GA/EA,WACb,MAAkC3C,mBAAS,CACzCnB,SAAU,GACVqD,MAAO,GACPC,SAAU,KACV,mBAJKC,EAAS,KAAEC,EAAY,KAK9B,EAA6BjC,YAAYd,GAAS,mBAA3CsD,EAAO,KAAI7B,EAAK,KAALA,MAGZwB,EAAe,SAACrE,GACpB,MAAwBA,EAAMoD,OAAtBkB,EAAI,EAAJA,KAAMpB,EAAK,EAALA,MAEdiB,EAAa,2BACRD,GAAS,mBACXI,EAAOpB,IAEZ,EAGMqB,EAAgB,iDAAG,WAAOvE,GAAK,mFACZ,OAAvBA,EAAMC,iBAAiB,kBAGEyE,EAAQ,CAC7B3B,UAAU,eAAMmB,KACf,KAAD,WAFM5B,EAAI,EAAJA,KAGR1C,EAAKwE,MAAM9B,EAAKoC,QAAQ/F,OAAO,gDAE/BgE,QAAQE,MAAM,EAAD,IAAI,yDAEpB,gBAXqB,sCAatB,OACE,sBAAMnD,UAAU,+BAA8B,SAC5C,qBAAKA,UAAU,kBAAiB,SAC9B,sBAAKA,UAAU,OAAM,UACnB,oBAAIA,UAAU,cAAa,qBAC3B,sBAAKA,UAAU,YAAW,UACxB,uBAAMsD,SAAUuB,EAAiB,UAC/B,uBACE7E,UAAU,aACVuD,YAAY,gBACZqB,KAAK,WACLjB,KAAK,WACLmB,GAAG,WACHtB,MAAOgB,EAAUvD,SACjBwC,SAAUkB,IAEZ,uBACE3E,UAAU,aACVuD,YAAY,aACZqB,KAAK,QACLjB,KAAK,QACLmB,GAAG,QACHtB,MAAOgB,EAAUF,MACjBb,SAAUkB,IAEZ,uBACE3E,UAAU,aACVuD,YAAY,SACZqB,KAAK,WACLjB,KAAK,WACLmB,GAAG,WACHtB,MAAOgB,EAAUD,SACjBd,SAAUkB,IAEZ,wBAAQ3E,UAAU,oBAAoB2D,KAAK,SAAQ,uBAKpDR,GAAS,yDAMtB,ECDe8B,GAtEC,SAACZ,GACf,IAAkBa,EAAcC,cAAxBlE,SAER,EAAoBuB,YAAYX,GAAzBuD,EAAoC,iBAA3B,GAChB,EAA0BnB,YAASiB,EAAYlD,EAAaC,EAAU,CACpEoB,UAAW,CAAEpC,SAAUiE,KADjBhB,EAAO,EAAPA,QAAStB,EAAI,EAAJA,KAIXyC,GAAW,OAAJzC,QAAI,IAAJA,OAAI,EAAJA,EAAMC,MAAU,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMyC,OAAQ,CAAC,EAGxC,GAAInF,EAAKC,YAAcD,EAAKoF,aAAa1C,KAAK3B,WAAaiE,EACzD,OAAO,cAAC,IAAQ,CAACjF,GAAG,sBAGtB,GAAIiE,EACF,OAAO,6CAGT,GAAS,OAAJmB,QAAI,IAAJA,MAAMpE,SACT,OACE,4HAOJ,IAAMsE,EAAW,iDAAG,iHAEVH,EAAU,CACd/B,UAAW,CAAEyB,GAAIO,EAAKjE,OACrB,KAAD,iDAEF6B,QAAQE,MAAM,EAAD,IAAI,wDAEpB,kBARgB,mCAUjB,OACE,gCACE,sBAAKnD,UAAU,gBAAe,UAC5B,qBAAIA,UAAU,kDAAiD,qBACpDkF,EAAS,UAAMG,EAAKpE,SAAQ,MAAO,OAAM,eAGnDiE,GACC,wBAAQlF,UAAU,cAAcK,QAASkF,EAAY,2BAMzD,sBAAKvF,UAAU,sCAAqC,UAClD,qBAAKA,UAAU,uBAAsB,SACnC,cAAC,EAAQ,CAACY,MAAOyE,EAAKzE,MAAOC,MAAK,UAAKwE,EAAKpE,SAAQ,mBAGtD,qBAAKjB,UAAU,uBAAsB,SACnC,cAAC,EAAW,CACViB,SAAUoE,EAAKpE,SACf4C,YAAawB,EAAKxB,YAClBC,QAASuB,EAAKvB,eAIpB,qBAAK9D,UAAU,OAAM,UAAGkF,GAAa,cAAC,EAAQ,QAGpD,EC1EeM,GAJC,WACd,OAAO,mEACT,ECuBeC,GAxBK,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SACrB,OACE,sBAAK1F,UAAU,YAAW,UACxB,qBAAKA,UAAU,cAAa,SAC1B,sBAAMA,UAAU,aAAY,wBAE9B,qBAAKA,UAAU,YAAW,SACvB0F,GACCA,EAAS3E,KAAI,SAAC4E,GAAO,OACnB,oBAAG3F,UAAU,YAAW,UACrB2F,EAAQC,YAAW,MAAK,IACzB,eAAC,IAAI,CACH3F,GAAE,mBAAc0F,EAAQ1E,UACxBC,MAAO,CAAEC,WAAY,KAAM,UAE1BwE,EAAQ1E,SAAQ,OAAM0E,EAAQrE,eANLqE,EAAQvE,IAQlC,QAKhB,ECuCeyE,GA3DK,SAAH,GAAoB,IAAdC,EAAM,EAANA,OACrB,EAA+B1D,mBAAS,IAAG,mBAApCwD,EAAW,KAAEG,EAAO,KAC3B,EAA4C3D,mBAAS,GAAE,mBAAhDE,EAAc,KAAEC,EAAiB,KACxC,EAAgCC,YAAYZ,GAAY,mBAAjDoE,EAAU,KAAI7C,EAAK,KAALA,MAWf0B,EAAgB,iDAAG,WAAOvE,GAAK,2EACZ,OAAvBA,EAAMC,iBAAiB,kBAGfyF,EAAW,CACf3C,UAAW,CAAEuC,cAAaE,YACzB,KAAD,EAGFC,EAAQ,KACRxD,EAAkB,GAAG,gDAErBU,QAAQE,MAAM,EAAD,IAAI,yDAEpB,gBAdqB,sCAgBtB,OACE,gCACE,oBACEnD,UAAS,cAA4B,MAAnBsC,GAA0Ba,EAAQ,aAAe,IAAK,8BAEtDb,EAAc,OAC/Ba,GAAS,sBAAMnD,UAAU,OAAM,8CAElC,uBACEA,UAAU,iEACVsD,SAAUuB,EAAiB,UAE3B,0BACEtB,YAAY,kBACZC,MAAOoC,EACP5F,UAAU,6BACVyD,SAxCa,SAACnD,GAChBA,EAAMoD,OAAOF,MAAM1C,QAAU,MAC/BiF,EAAQzF,EAAMoD,OAAOF,OACrBjB,EAAkBjC,EAAMoD,OAAOF,MAAM1C,QAEzC,IAsCM,wBAAQd,UAAU,sBAAsB2D,KAAK,SAAQ,uBAKtDR,GAAS,+DAGhB,EClBe8C,GAlCF,SAAC5B,GACZ,IAAYyB,EAAWX,cAAfL,GAER,EAA0Bb,YAASlC,EAAY,CAC7CsB,UAAW,CAAEyB,GAAIgB,KADX5B,EAAO,EAAPA,QAAStB,EAAI,EAAJA,KAIX5B,GAAW,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAM5B,OAAQ,CAAC,EAE5B,OAAIkD,EACK,6CAIP,gCACE,sBAAKlE,UAAU,YAAW,UACxB,oBAAGA,UAAU,cAAa,UACxB,sBAAMkB,MAAO,CAAEC,WAAY,KAAOnB,UAAU,aAAY,SACrDgB,EAAKC,WACA,IAAG,WACFD,EAAKM,aAEhB,qBAAKtB,UAAU,YAAW,SACxB,4BAAIgB,EAAKK,gBAIZL,EAAKO,aAAe,GAAK,cAAC,GAAW,CAACmE,SAAU1E,EAAK0E,WAErDxF,EAAKC,YAAc,cAAC,GAAW,CAAC2F,OAAQ9E,EAAKI,QAGpD,ECvBM8E,GAAWC,YAAe,CAC9BC,IAAK,aAGDC,GAAWC,aAAW,SAACC,EAAE,GAAkB,IAAfC,EAAO,EAAPA,QAC1BvH,EAAQM,aAAaC,QAAQ,YACnC,MAAO,CACLgH,QAAQ,2BACHA,GAAO,IACVC,cAAexH,EAAK,iBAAaA,GAAU,KAGjD,IAEMyH,GAAS,IAAIC,IAAa,CAC9BC,KAAMP,GAASQ,OAAOX,IACtBxD,MAAO,IAAIoE,MA0BEC,OAvBf,WACE,OACE,cAACC,EAAA,EAAc,CAACN,OAAQA,GAAO,SAC7B,cAAC,IAAM,UACL,sBAAK1G,UAAU,GAAE,UACf,cAAC,EAAM,IACP,qBAAKA,UAAU,YAAW,SACxB,eAAC,IAAM,WACL,cAAC,IAAK,CAACiH,KAAK,IAAIC,QAAS,cAAC,GAAI,MAC9B,cAAC,IAAK,CAACD,KAAK,SAASC,QAAS,cAAC,GAAK,MACpC,cAAC,IAAK,CAACD,KAAK,UAAUC,QAAS,cAAC,GAAM,MACtC,cAAC,IAAK,CAACD,KAAK,WAAWC,QAAS,cAAC,GAAO,MACxC,cAAC,IAAK,CAACD,KAAK,YAAYC,QAAS,cAAC,GAAI,MACtC,cAAC,IAAK,CAACD,KAAK,IAAIC,QAAS,cAACC,GAAQ,WAGtC,cAAC,EAAM,UAKjB,EC/CeC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECLAQ,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,GAAG,MAENC,SAASC,eAAe,SAM1Bb,I","file":"static/js/main.adcfa4df.chunk.js","sourcesContent":["import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    // axios.defaults.headers.common[\"Authorization\"] = null;\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Auth from \"../../utils/auth\";\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <header className=\"bg-secondary mb-4 py-2 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <Link to=\"/\">\n          <h1>Lets Chat</h1>\n        </Link>\n\n        <nav className=\"text-center\">\n          {Auth.loggedIn() ? (\n            <>\n              <Link to=\"/profile\">Me</Link>\n              <a href=\"/\" onClick={logout}>\n                Logout\n              </a>\n            </>\n          ) : (\n            <>\n              <Link to=\"/login\">Login</Link>\n              <Link to=\"/signup\">Signup</Link>\n            </>\n          )}\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\n// We can add more character to this\n\nconst Footer = () => {\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container\">\n        &copy;{new Date().getFullYear()} by Chris, Scott, Guy, Max and jocelyn\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst PostList = ({ posts, title }) => {\n  if (!posts.length) {\n    return <h3>No posts yet</h3>;\n  }\n\n  return (\n    <div>\n      <h3>{title}</h3>\n      {posts &&\n        posts.map((post) => (\n          <div key={post._id}>\n            <h4 className=\"card-header\">\n              <Link\n                to={`/profile/${post.username}`}\n                style={{ fontWeight: 700 }}\n                className=\"text-light\"\n              >\n                {post.username}\n              </Link>{\" \"}\n            </h4>\n            <div>\n              <Link to={`/post/${post._id}`}>\n                <p className=\"card-body\">{post.postText}</p>\n                <p className=\"comments\">\n                  Posted on {post.createdAt} <br></br>\n                  Comments: {post.commentCount} ||{\" \"}\n                  {post.commentCount ? \"View\" : \"Start\"} the commentary!\n                </p>\n              </Link>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default PostList;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_POST = gql`\n  mutation addPost($postText: String!) {\n    addPost(postText: $postText) {\n      _id\n      postText\n      createdAt\n      username\n      commentCount\n      comments {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($postId: ID!, $commentBody: String!) {\n    addComment(postId: $postId, commentBody: $commentBody) {\n      _id\n      commentCount\n      comments {\n        _id\n        commentBody\n        createdAt\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_FRIEND = gql`\n  mutation addFriend($id: ID!) {\n    addFriend(friendId: $id) {\n      _id\n      username\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const REMOVE_FRIEND = gql`\n  mutation removeFriend($id: ID!) {\n    removeFriend(id: $id) {\n      _id\n      username\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_POSTS = gql`\n  query posts($username: String) {\n    posts(username: $username) {\n      _id\n      postText\n      createdAt\n      username\n      commentCount\n      comments {\n        _id\n        createdAt\n        username\n        commentBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_POST = gql`\n  query post($id: ID!) {\n    post(_id: $id) {\n      _id\n      postText\n      createdAt\n      username\n      commentCount\n      comments {\n        _id\n        createdAt\n        username\n        commentBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      friendCount\n      friends {\n        _id\n        username\n      }\n      posts {\n        _id\n        postText\n        createdAt\n        commentCount\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      friendCount\n      posts {\n        _id\n        postText\n        createdAt\n        commentCount\n        comments {\n          _id\n          createdAt\n          commentBody\n          username\n        }\n      }\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME_BASIC = gql`\n  {\n    me {\n      _id\n      username\n      email\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\n\n//Other important stuff\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_POST } from \"../../utils/mutations\";\nimport { QUERY_POSTS, QUERY_ME } from \"../../utils/queries\";\n\nconst maxPostCharacters = 280;\n\nconst PostForm = () => {\n  const [postText, setText] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    update(cache, { data: { addPost } }) {\n      try {\n        const { me } = cache.readQuery({ query: QUERY_ME });\n        cache.writeQuery({\n          query: QUERY_ME,\n          data: { me: { ...me, posts: [...me.posts, addPost] } },\n        });\n      } catch (err) {\n        console.warn(\"First post by this user!\");\n      }\n\n      const { posts } = cache.readQuery({ query: QUERY_POSTS });\n      cache.writeQuery({\n        query: QUERY_POSTS,\n        data: { posts: [addPost, ...posts] },\n      });\n    },\n  });\n\n  const handleChange = (event) => {\n    if (event.target.value.length <= maxPostCharacters) {\n      setText(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addPost({\n        variables: { postText },\n      });\n\n      setText(\"\");\n      setCharacterCount(0);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleSubmit}\n      >\n        <textarea\n          className=\"form-input col-12 col-md-9\"\n          placeholder=\"What is on your mind?\"\n          value={postText}\n          onChange={handleChange}\n        ></textarea>{\" \"}\n        <br></br>\n        <p>\n          Character Count: {characterCount}/{maxPostCharacters}\n          {error && <span>Something went wrong...</span>}\n        </p>\n        <br></br>\n        <button className=\"button-29 btn\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default PostForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst FriendsList = ({ friendCount, friends }) => {\n  if (!friends || !friends.length) {\n    return <p>Make some friends!</p>;\n  }\n\n  return (\n    <div>\n      <h5>My {friendCount === 1 ? \"friend\" : \"friends\"}</h5>\n      {friends.map((friend) => (\n        <button className=\"button-29\" key={friend._id}>\n          <Link to={`/profile/${friend.username}`}>{friend.username}</Link>\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FriendsList;\n","import React from \"react\";\nimport PostList from \"../components/PostList\";\nimport PostForm from \"../components/PostForm\";\nimport FriendsList from \"../components/FriendsList\";\n\nimport Auth from \"../utils/auth\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_POSTS, QUERY_ME_BASIC } from \"../utils/queries\";\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_POSTS);\n  const { data: userData } = useQuery(QUERY_ME_BASIC);\n  const posts = data?.posts || [];\n\n  const loggedIn = Auth.loggedIn();\n\n  return (\n    <main>\n      <div className=\"flex-row justify-space-between\">\n        {loggedIn && (\n          <div className=\"col-12 mb-3\">\n            <PostForm />\n          </div>\n        )}\n        <div className={`col-12 mb-3 ${loggedIn && \"col-lg-8\"}`}>\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <PostList posts={posts} title=\"What's the Word?\" />\n          )}\n        </div>\n        {loggedIn && userData ? (\n          <div className=\"col-12 col-lg-3 mb-3\">\n            <FriendsList\n              username={userData.me.username}\n              friendCount={userData.me.friendCount}\n              friends={userData.me.friends}\n            />\n          </div>\n        ) : null}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const[formState, setFormState] = useState({ email: '', password: '' });\n  const[login, { error }] = useMutation(LOGIN_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main>\n      <div>\n        <div className='card'>\n          <h4 className='card-header'>Login</h4>\n          <div className='card-body'>\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className='form-input'\n                placeholder='Email'\n                name='email'\n                type='email'\n                id='email'\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className='form-input'\n                placeholder='Password'\n                name='password'\n                type='password'\n                id='password'\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className='btn' type='submit'>\n                Submit\n              </button>\n            </form>\n            {error && <div>Login unsuccessful</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  // update state\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Sign Up</h4>\n          <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your username\"\n                name=\"username\"\n                type=\"username\"\n                id=\"username\"\n                value={formState.username}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className=\"btn d-block w-100\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n\n            {error && <div>Signup failed</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\n\nimport PostForm from \"../components/PostForm\";\nimport PostList from \"../components/PostList\";\nimport FriendsList from \"../components/FriendsList\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_USER, QUERY_ME } from \"../utils/queries\";\nimport { ADD_FRIEND } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst Profile = (props) => {\n  const { username: userParam } = useParams();\n\n  const [addFriend] = useMutation(ADD_FRIEND);\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n\n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/profile:username\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  const handleClick = async () => {\n    try {\n      await addFriend({\n        variables: { id: user._id },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {userParam ? `${user.username}'s` : \"your\"} profile.\n        </h2>\n\n        {userParam && (\n          <button className=\"btn ml-auto\" onClick={handleClick}>\n            Add Friend\n          </button>\n        )}\n      </div>\n\n      <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 mb-3 col-lg-8\">\n          <PostList posts={user.posts} title={`${user.username}'s posts...`} />\n        </div>\n\n        <div className=\"col-12 col-lg-3 mb-3\">\n          <FriendsList\n            username={user.username}\n            friendCount={user.friendCount}\n            friends={user.friends}\n          />\n        </div>\n      </div>\n      <div className=\"mb-3\">{!userParam && <PostForm />}</div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n\nconst NoMatch = () => {\n  return <div>Oops, we couldn't find that page.</div>;\n};\n\nexport default NoMatch;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CommentList = ({ comments }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-header\">\n        <span className=\"text-light\">Comments</span>\n      </div>\n      <div className=\"card-body\">\n        {comments &&\n          comments.map((comment) => (\n            <p className=\"pill mb-3\" key={comment._id}>\n              {comment.commentBody} //{\" \"}\n              <Link\n                to={`/profile/${comment.username}`}\n                style={{ fontWeight: 700 }}\n              >\n                {comment.username} on {comment.createdAt}\n              </Link>\n            </p>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CommentList;\n","import React, { useState } from \"react\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_COMMENT } from \"../../utils/mutations\";\n\nconst CommentForm = ({ postId }) => {\n  const [commentBody, setBody] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setBody(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addComment({\n        variables: { commentBody, postId },\n      });\n\n      // clear form value\n      setBody(\" \");\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <p\n        className={`m-0 ${characterCount === 280 || error ? \"text-error\" : \"\"}`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Uh oh Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <textarea\n          placeholder=\"leave a comment\"\n          value={commentBody}\n          className=\"form-input col-12 col-md-9\"\n          onChange={handleChange}\n        ></textarea>\n\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n\n      {error && <div>Uh Oh Something went wrong</div>}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport CommentList from \"../components/CommentList\";\nimport CommentForm from \"../components/CommentForm\";\n\nimport Auth from \"../utils/auth\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_POST } from \"../utils/queries\";\n\nconst Post = (props) => {\n  const { id: postId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_POST, {\n    variables: { id: postId },\n  });\n\n  const post = data?.post || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"card mb-3\">\n        <p className=\"card-header\">\n          <span style={{ fontWeight: 700 }} className=\"text-light\">\n            {post.username}\n          </span>{\" \"}\n          post on {post.createdAt}\n        </p>\n        <div className=\"card-body\">\n          <p>{post.postText}</p>\n        </div>\n      </div>\n\n      {post.commentCount > 0 && <CommentList comments={post.comments} />}\n\n      {Auth.loggedIn() && <CommentForm postId={post._id} />}\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Profile from \"./pages/Profile\";\nimport NotFound from \"./pages/NotFound\";\nimport Post from \"./pages/Post\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/profile\" element={<Profile />} />\n              <Route path=\"/post/:id\" element={<Post />} />\n              <Route path=\"*\" element={<NotFound />} />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}